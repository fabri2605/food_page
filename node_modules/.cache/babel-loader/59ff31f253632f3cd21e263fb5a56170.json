{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fabri\\\\Desktop\\\\Practica\\\\17 (Better) Food Page\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport Modal from '../UI/Modal';\nimport CartItem from './CartItem';\nimport classes from './Cart.module.css';\nimport CartContext from '../../store/cart-context';\nimport Checkout from './Checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCtx = useContext(CartContext);\n  const [orderWasSent, setOrderWasSent] = useState(false);\n  const [posted, setPosted] = useState('');\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem(item);\n    setOrderWasSent(false);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n\n  async function postingOrder() {\n    setOrderWasSent(true);\n  }\n\n  async function confirmation(e) {\n    const user = [];\n\n    for (const key in e) {\n      user.push(e[key]);\n    }\n\n    const [name, street, postal, city] = user;\n    const order = {\n      id: Date.now(),\n      name: name,\n      street: street,\n      postal: postal,\n      city: city,\n      items: cartCtx.items\n    };\n    const response = await fetch('https://react-http-467cc-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify(order),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (response.ok) {\n      console.log('Sent!');\n    }\n  }\n\n  ;\n\n  const cancelation = e => {\n    e.preventDefault();\n    props.onClose();\n  };\n\n  const sent = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: classes.sent,\n    children: \"Your order has been updated!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 18\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), !orderWasSent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes['button--alt'],\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: postingOrder,\n        className: classes.button,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), posted, orderWasSent && /*#__PURE__*/_jsxDEV(Checkout, {\n      onCancel: cancelation,\n      onConfirm: confirmation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cart, \"nIABmC+5X6KRD7lkyWa3dhfmOKc=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["useContext","useState","Modal","CartItem","classes","CartContext","Checkout","Cart","props","cartCtx","orderWasSent","setOrderWasSent","posted","setPosted","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","cartItems","map","name","amount","price","bind","postingOrder","confirmation","e","user","key","push","street","postal","city","order","Date","now","response","fetch","method","body","JSON","stringify","headers","ok","console","log","cancelation","preventDefault","onClose","sent","total","actions","button"],"sources":["C:/Users/fabri/Desktop/Practica/17 (Better) Food Page/src/components/Cart/Cart.js"],"sourcesContent":["import { useContext, useState } from 'react';\n\nimport Modal from '../UI/Modal';\nimport CartItem from './CartItem';\nimport classes from './Cart.module.css';\nimport CartContext from '../../store/cart-context';\nimport Checkout from './Checkout';\n\nconst Cart = (props) => {\n    const cartCtx = useContext(CartContext);\n    const [orderWasSent, setOrderWasSent] = useState(false);\n    const [posted, setPosted] = useState('');\n\n    const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n    const hasItems = cartCtx.items.length > 0;\n\n    const cartItemRemoveHandler = (id) => {\n        cartCtx.removeItem(id);\n    };\n\n    const cartItemAddHandler = (item) => {\n        cartCtx.addItem(item);\n        setOrderWasSent(false);\n    };\n\n    const cartItems = (\n        <ul className={classes['cart-items']}>\n            {cartCtx.items.map((item) => (\n                <CartItem\n                    key={item.id}\n                    name={item.name}\n                    amount={item.amount}\n                    price={item.price}\n                    onRemove={cartItemRemoveHandler.bind(null, item.id)}\n                    onAdd={cartItemAddHandler.bind(null, item)}\n                />\n            ))}\n        </ul>\n    );\n\n    async function postingOrder() {\n        setOrderWasSent(true);\n    }\n\n    async function confirmation(e) {\n        const user = [];\n        for (const key in e) {\n            user.push(e[key]);\n        }\n        const [name, street, postal, city] = user;\n        const order = {\n            id: Date.now(),\n            name: name,\n            street: street,\n            postal: postal,\n            city: city,\n            items: cartCtx.items,\n        };\n        const response = await fetch(\n            'https://react-http-467cc-default-rtdb.firebaseio.com/orders.json',\n            {\n                method: 'POST',\n                body: JSON.stringify(order),\n                headers: { 'Content-Type': 'application/json' },\n            }\n        );\n        if (response.ok) {\n            console.log('Sent!');\n        }\n    };\n    const cancelation = (e) => {\n        e.preventDefault();\n        props.onClose();\n    };\n\n    const sent = <p className={classes.sent}>Your order has been updated!</p>;\n\n    return (\n        <Modal onClose={props.onClose}>\n            {cartItems}\n            <div className={classes.total}>\n                <span>Total Amount</span>\n                <span>{totalAmount}</span>\n            </div>\n            {!orderWasSent && (\n                <div className={classes.actions}>\n                    <button\n                        className={classes['button--alt']}\n                        onClick={props.onClose}\n                    >\n                        Close\n                    </button>\n                    {hasItems && (\n                        <button\n                            onClick={postingOrder}\n                            className={classes.button}\n                        >\n                            Order\n                        </button>\n                    )}\n                </div>\n            )}\n            {posted}\n            {orderWasSent && (\n                <Checkout onCancel={cancelation} onConfirm={confirmation} />\n            )}\n        </Modal>\n    );\n};\n\nexport default Cart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}