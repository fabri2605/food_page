{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fabri\\\\Desktop\\\\Practica\\\\17 (Better) Food Page\\\\src\\\\store\\\\OrdersCart.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Modal from '../components/UI/Modal';\nimport classes from '../components/UI/Modal.module.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrdersCart = props => {\n  _s();\n\n  const [myOrders, setMyOrders] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function fetchOrdersHandler() {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('https://react-http-467cc-default-rtdb.firebaseio.com/orders.json');\n\n      if (response.ok) {\n        console.log('All right!');\n      }\n\n      const data = await response.json();\n      const loadedOrders = [];\n\n      for (const key in data) {\n        console.log(key);\n        key.forEach(e => {\n          loadedOrders.push({\n            id: e.id,\n            amount: e.amount,\n            price: e.price,\n            amount: e.amount\n          });\n        });\n      }\n\n      setMyOrders(loadedOrders);\n    } catch (e) {\n      console.log(e.message);\n    }\n\n    setIsLoading(false);\n  }\n\n  let total = 0;\n\n  for (const a of myOrders) {\n    total = total + a.price * a.amount;\n  }\n\n  const totalAmount = total;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchOrdersHandler,\n      children: \"Fetch orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), myOrders.map(e => {}), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrdersCart, \"QLJMxx0IpgB7F2uFtCaytecfSWA=\");\n\n_c = OrdersCart;\nexport default OrdersCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersCart\");","map":{"version":3,"names":["React","Modal","classes","useState","OrdersCart","props","myOrders","setMyOrders","isLoading","setIsLoading","fetchOrdersHandler","response","fetch","ok","console","log","data","json","loadedOrders","key","forEach","e","push","id","amount","price","message","total","a","totalAmount","onClose","map","actions","button"],"sources":["C:/Users/fabri/Desktop/Practica/17 (Better) Food Page/src/store/OrdersCart.js"],"sourcesContent":["import React from 'react';\r\nimport Modal from '../components/UI/Modal';\r\nimport classes from '../components/UI/Modal.module.css';\r\nimport { useState } from 'react';\r\n\r\nconst OrdersCart = (props) => {\r\n    const [myOrders, setMyOrders] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    async function fetchOrdersHandler() {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await fetch(\r\n                'https://react-http-467cc-default-rtdb.firebaseio.com/orders.json'\r\n            );\r\n            if (response.ok) {\r\n                console.log('All right!');\r\n            }\r\n            const data = await response.json();\r\n            const loadedOrders = [];\r\n            for (const key in data) {\r\n                console.log(key);\r\n                key.forEach((e) => {\r\n                    loadedOrders.push({\r\n                        id: e.id,\r\n                        amount: e.amount,\r\n                        price: e.price,\r\n                        amount: e.amount,\r\n                    });\r\n                });\r\n            }\r\n            setMyOrders(loadedOrders);\r\n        } catch (e) {\r\n            console.log(e.message);\r\n        }\r\n        setIsLoading(false);\r\n    }\r\n    let total = 0;\r\n    for (const a of myOrders) {\r\n        total = total + a.price * a.amount;\r\n    }\r\n    const totalAmount = total;\r\n\r\n    return (\r\n        <Modal onClose={props.onClose}>\r\n            {isLoading ? (\r\n                <p>Loading...</p>\r\n            ) : (\r\n                <button onClick={fetchOrdersHandler}>Fetch orders</button>\r\n            )}\r\n            {myOrders.map((e) => {})}\r\n            <div className={classes.total}>\r\n                <span>Total Amount</span>\r\n                <span>{totalAmount}</span>\r\n            </div>\r\n            <div className={classes.actions}>\r\n                <button className={classes.button}>Close</button>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default OrdersCart;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAAA;;EAC1B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;;EACA,eAAeO,kBAAf,GAAoC;IAChCD,YAAY,CAAC,IAAD,CAAZ;;IACA,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CACxB,kEADwB,CAA5B;;MAGA,IAAID,QAAQ,CAACE,EAAb,EAAiB;QACbC,OAAO,CAACC,GAAR,CAAY,YAAZ;MACH;;MACD,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;MACA,MAAMC,YAAY,GAAG,EAArB;;MACA,KAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAwB;QACpBF,OAAO,CAACC,GAAR,CAAYI,GAAZ;QACAA,GAAG,CAACC,OAAJ,CAAaC,CAAD,IAAO;UACfH,YAAY,CAACI,IAAb,CAAkB;YACdC,EAAE,EAAEF,CAAC,CAACE,EADQ;YAEdC,MAAM,EAAEH,CAAC,CAACG,MAFI;YAGdC,KAAK,EAAEJ,CAAC,CAACI,KAHK;YAIdD,MAAM,EAAEH,CAAC,CAACG;UAJI,CAAlB;QAMH,CAPD;MAQH;;MACDjB,WAAW,CAACW,YAAD,CAAX;IACH,CArBD,CAqBE,OAAOG,CAAP,EAAU;MACRP,OAAO,CAACC,GAAR,CAAYM,CAAC,CAACK,OAAd;IACH;;IACDjB,YAAY,CAAC,KAAD,CAAZ;EACH;;EACD,IAAIkB,KAAK,GAAG,CAAZ;;EACA,KAAK,MAAMC,CAAX,IAAgBtB,QAAhB,EAA0B;IACtBqB,KAAK,GAAGA,KAAK,GAAGC,CAAC,CAACH,KAAF,GAAUG,CAAC,CAACJ,MAA5B;EACH;;EACD,MAAMK,WAAW,GAAGF,KAApB;EAEA,oBACI,QAAC,KAAD;IAAO,OAAO,EAAEtB,KAAK,CAACyB,OAAtB;IAAA,WACKtB,SAAS,gBACN;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADM,gBAGN;MAAQ,OAAO,EAAEE,kBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJR,EAMKJ,QAAQ,CAACyB,GAAT,CAAcV,CAAD,IAAO,CAAE,CAAtB,CANL,eAOI;MAAK,SAAS,EAAEnB,OAAO,CAACyB,KAAxB;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,UAAOE;MAAP;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ,eAWI;MAAK,SAAS,EAAE3B,OAAO,CAAC8B,OAAxB;MAAA,uBACI;QAAQ,SAAS,EAAE9B,OAAO,CAAC+B,MAA3B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAXJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH,CAtDD;;GAAM7B,U;;KAAAA,U;AAwDN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}